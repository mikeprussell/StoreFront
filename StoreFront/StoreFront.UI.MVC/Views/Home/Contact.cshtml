@model StoreFront.UI.MVC.Models.ContactViewModel

@{
    ViewBag.Title = "Contact";
}

<h2>Contact</h2>

<p class="text-danger">
    @if (ViewBag.ErrorMessage != null)
    {
        <span>@Html.Raw(ViewBag.ErrorMessage)</span>
    }
</p>

<!-- Contact Form -->
<section class="contact-form">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-12">
                            <fieldset>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </fieldset>
                        </div>
                        <div class="col-md-12">
                            <fieldset>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Address" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </fieldset>
                        </div>
                        <div class="col-md-12">
                            <fieldset>
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", placeholder = "Subject" } })
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </fieldset>
                        </div>
                        <div class="col-md-12">
                            <fieldset>
                                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your message here..." } })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                            </fieldset>
                        </div>
                        <div class="col-md-12">
                            <fieldset>
                                <button type="submit" id="form-submit" class="button">Send Message</button>
                            </fieldset>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
